syntax = "proto3";

package permos.permos;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "permos/permos/params.proto";
import "permos/permos/permos.proto";

option go_package = "permos/x/permos/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/permos/permos/params";
  
  }
  
  // Queries a list of Permos items.
  rpc Permos    (QueryGetPermosRequest) returns (QueryGetPermosResponse) {
    option (google.api.http).get = "/permos/permos/permos/{id}";
  
  }
  rpc PermosAll (QueryAllPermosRequest) returns (QueryAllPermosResponse) {
    option (google.api.http).get = "/permos/permos/permos";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetPermosRequest {
  uint64 id = 1;
}

message QueryGetPermosResponse {
  Permos Permos = 1 [(gogoproto.nullable) = false];
}

message QueryAllPermosRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPermosResponse {
  repeated Permos                                 Permos     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

